{"version":3,"file":"static/js/104.6d60847b.chunk.js","mappings":"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","sources":["components/MovieReviews/MovieReviews.styled.js","components/MovieReviews/MovieReviews.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SCText = styled.p`\ntext-indent:  ${p => p.theme.space[5]}px;\ncolor: ${p => p.theme.colors.text};\n`;\n\nexport const SCTitle = styled.p`\nfont-weight: ${p =>p.theme.fontWeights.bold};\n`;\n\nexport const SCSubTitle = styled.p`\nmargin-bottom: ${p => p.theme.space[2]}px;\nfont-size: ${p=>p.theme.fontSizes.m};\nfont-style: italic;\n`;\n\nexport const SCReviews = styled.div`\n box-shadow: inset 0px 8px 10px -8px rgb(77,75,77);\n  padding-top: ${p => p.theme.space[4]}px;\n`;\n\n\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { IoPersonCircle } from 'react-icons/io5';\n\nimport moviesAPI from 'service-api/MoviesAPI';\nimport Loader from '../Loader';\n\nimport { SCTitle, SCSubTitle, SCText, SCReviews } from './MovieReviews.styled';\nimport { Box } from 'components/Box';\n\nconst MovieReviews = () => {\n  const { pathname } = useLocation();\n  const [movieReviews, setMovieReviews] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchPath = pathname.slice(32);\n\n  useEffect(() => {\n    const getMovieReviews = searchPath => {\n      moviesAPI\n        .getMovieDetails(searchPath)\n        .then(({ results }) => {\n          setMovieReviews(results);\n        })\n        .catch(err => console.log(err))\n        .finally(setIsLoading(false));\n    };\n    if (searchPath) {\n      setIsLoading(true);\n      getMovieReviews(searchPath);\n    }\n  }, [searchPath]);\n\n  return (\n    <SCReviews>\n      {isLoading && <Loader />}\n      {!!movieReviews?.length ? (\n        movieReviews.map(({ id, author, content, created_at, updated_at }) => (\n          <Box key={id} mb={5}>\n            <Box\n              display=\"flex\"\n              gridGap=\"15px\"\n              flexWrap=\"wrap\"\n              alignItem=\"center\"\n            >\n              <IoPersonCircle size=\"50px\" />\n              <Box>\n                <SCTitle>{author}</SCTitle>\n                <Box display=\"flex\" gridGap=\"15px\" mb={4}>\n                  <SCSubTitle>\n                    Created: {created_at.slice(0, 10).toLocaleString()}\n                  </SCSubTitle>\n                  {updated_at && (\n                    <SCSubTitle>\n                      Updated: {updated_at.slice(0, 10).toLocaleString()}\n                    </SCSubTitle>\n                  )}\n                </Box>\n              </Box>\n            </Box>\n            <SCText>{content}</SCText>\n          </Box>\n        ))\n      ) : (\n        <SCText>No Reviews</SCText>\n      )}\n    </SCReviews>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\nimport { Component } from 'react';\n\nclass MoviesApiService extends Component {\n  _URL_ORIGIN = 'https://api.themoviedb.org/3';\n  _apiKey = '739ddb8e241607cc9ff00a57b23f5e54';\n\n    getTrendingMovies = async () => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n      const pathName = '/trending/movie/day'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n  getMoviesBySearchQuery= async (query, page) => {\n    const searchParam = new URLSearchParams({\n      query,\n      page,\n      api_key: this._apiKey,\n    });\n    const pathName = '/search/movie'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n    getMovieDetails= async (searchPath) => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n\n    const pathName = '/movie/'\n    \n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}/${searchPath}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            \"Unfortunately, we don't have more details about this movie...\"\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n};\n\nconst moviesAPI = new MoviesApiService();\n\nexport default moviesAPI;\n"],"names":["SCText","styled","p","theme","space","colors","text","SCTitle","fontWeights","bold","SCSubTitle","fontSizes","m","SCReviews","pathname","useLocation","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","searchPath","slice","useEffect","moviesAPI","then","results","catch","err","console","log","finally","getMovieReviews","Loader","length","map","id","author","content","created_at","updated_at","Box","mb","display","gridGap","flexWrap","alignItem","size","toLocaleString","MoviesApiService","_URL_ORIGIN","_apiKey","getTrendingMovies","searchParam","URLSearchParams","api_key","axios","response","status","Promise","reject","message","data","total_results","getMoviesBySearchQuery","query","page","getMovieDetails","Component"],"sourceRoot":""}