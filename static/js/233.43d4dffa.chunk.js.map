{"version":3,"file":"static/js/233.43d4dffa.chunk.js","mappings":"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","sources":["components/MoviesDetails/MovieReviews/MovieReviews.styled.js","components/MoviesDetails/MovieReviews/MovieReviews.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SCText = styled.p`\ntext-indent:  ${p => p.theme.space[5]}px;\ncolor: ${p => p.theme.colors.text};\n`;\n\nexport const SCTitle = styled.p`\nfont-weight: ${p =>p.theme.fontWeights.bold};\n`;\n\nexport const SCSubTitle = styled.p`\nmargin-bottom: ${p => p.theme.space[2]}px;\nfont-size: ${p=>p.theme.fontSizes.m};\nfont-style: italic;\n`;\n\nexport const SCReviews = styled.div`\n box-shadow: inset 0px 8px 10px -8px rgb(77,75,77);\n  padding-top: ${p => p.theme.space[4]}px;\n`;\n\n\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { IoPersonCircle } from 'react-icons/io5';\n\nimport { getMovieReviewsById } from 'service-api/MoviesAPI';\nimport Loader from '../../Loader';\n\nimport { SCTitle, SCSubTitle, SCText, SCReviews } from './MovieReviews.styled';\nimport { Box } from 'components/Box';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    movieId && setIsLoading(true);\n\n    getMovieReviewsById(movieId)\n      .then(({ results }) => {\n        setMovieReviews(results);\n      })\n      .catch(err => console.log(err))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <SCReviews>\n      {isLoading && <Loader />}\n      {!!movieReviews?.length ? (\n        movieReviews.map(({ id, author, content, created_at, updated_at }) => (\n          <Box key={id} mb={5}>\n            <Box\n              display=\"flex\"\n              gridGap=\"15px\"\n              flexWrap=\"wrap\"\n              alignItem=\"center\"\n            >\n              <IoPersonCircle size=\"50px\" color=\"#9a999b\" />\n              <Box>\n                <SCTitle>{author}</SCTitle>\n                <Box display=\"flex\" gridGap=\"15px\" mb={4}>\n                  <SCSubTitle>\n                    Created: {created_at.slice(0, 10).toLocaleString()}\n                  </SCSubTitle>\n                  {updated_at && (\n                    <SCSubTitle>\n                      Updated: {updated_at.slice(0, 10).toLocaleString()}\n                    </SCSubTitle>\n                  )}\n                </Box>\n              </Box>\n            </Box>\n            <SCText>{content}</SCText>\n          </Box>\n        ))\n      ) : (\n        <SCText>No Reviews</SCText>\n      )}\n    </SCReviews>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nconst getMovies = async ({ pathName, param={} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n  api_key: '739ddb8e241607cc9ff00a57b23f5e54',\n  ...param\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject(\n          'Sorry, no matches found. Please try again.'\n        );\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' })\n};\n\n     \nexport const getMoviesBySearchQuery = (query) => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: {query}\n  })\n};\n  \nexport const getMovieDetailsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}`\n  })\n};\nexport const getMovieCastById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`\n  })\n};\n\nexport const getMovieReviewsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`\n  })\n};"],"names":["SCText","styled","p","theme","space","colors","text","SCTitle","fontWeights","bold","SCSubTitle","fontSizes","m","SCReviews","movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","useEffect","getMovieReviewsById","then","results","catch","err","console","log","finally","Loader","length","map","id","author","content","created_at","updated_at","Box","mb","display","gridGap","flexWrap","alignItem","size","color","slice","toLocaleString","IMAGE_URL","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","response","status","Promise","reject","message","data","total_results","getTrendingMovies","getMoviesBySearchQuery","query","getMovieDetailsById","getMovieCastById"],"sourceRoot":""}