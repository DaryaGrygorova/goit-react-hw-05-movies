{"version":3,"file":"static/js/429.1f98363a.chunk.js","mappings":"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","sources":["components/MoviesDetails/MoviesDetails.styled.js","components/MoviesDetails/MoviesDetails.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const SCLink = styled(Link)`\ndisplay: flex;\ngap: 10px;\nwidth: max-content;\npadding: 8px 15px;\nborder: ${p => p.theme.borders.normal};\nborder-radius: ${p => p.theme.radii.lg};\ntext-decoration: none;\ncolor: ${p => p.theme.colors.white};\nbackground-color:  ${p => p.theme.colors.primary};\nopacity: 0.7;\n\n:hover,\n:focus {\nopacity: 1;\n};\n`;\n\nexport const SCTitle = styled.h1`\nmargin-bottom: ${p => p.theme.space[4]}px;\n`;\nexport const SCSubTitle = styled.p`\nfont-weight: ${p => p.theme.fontWeights.bold};\nmargin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const SCText = styled.p`\nmargin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const SCImageWrapper = styled.div`\nflex-shrink: 0;\nwidth: 300px;\nheight: auto;\nborder-radius: ${p => p.theme.radii.md};\noverflow: hidden;\n`;\n\nexport const SCNavBar = styled.div`\npadding: ${p => p.theme.space[2]}px;\npadding-bottom: 0;\n/* box-shadow: 0 4px 5px 0 #b8b2b8; */\n`;\n\nexport const SCNavLink = styled(NavLink)`\nposition: relative;\n  display: flex;\n  align-items: flex-end;\n  gap: ${p=> p.theme.space[3]}px;\n  padding: 17px 0;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-decoration: none;\n \n &.active {\ncolor: ${p => p.theme.colors.accent};\n  ::after {\n   transform: scale(1);\n };\n};\n\n ::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    display: block;\n    width: 100%;\n    height: 4px;\n   transform: scale(0);\n    background-color: ${p => p.theme.colors.accent};\n    translate: transform 250ms;\n};\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n  color: ${p=> p.theme.colors.accent};\n };\n `;\n\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { Suspense, useState, useEffect } from 'react';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\n\nimport moviesAPI from 'service-api/MoviesAPI';\nimport { Box } from 'components/Box';\nimport Loader from '../Loader';\nimport placeholderIMG from '../../images/placeholder.webp';\n\nimport {\n  SCLink,\n  SCImageWrapper,\n  SCTitle,\n  SCSubTitle,\n  SCText,\n  SCNavBar,\n  SCNavLink,\n} from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const ROUTE_HOME_PAGE = process.env.REACT_APP_ROUTE_HOME_PAGE;\n  const { pathname, state } = useLocation();\n  const [movieData, setMovieData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { poster_path, title, vote_average, overview, genres } = movieData;\n\n  const getSearchPath = () => {\n    if (pathname.includes('cast')) {\n      return pathname?.slice(32, -5);\n    }\n    if (pathname.includes('reviews')) {\n      return pathname?.slice(32, -8);\n    }\n    return pathname?.slice(32);\n  };\n\n  const searchPath = getSearchPath() || state?.pathname?.slice(32);\n\n  useEffect(() => {\n    const getMovieData = searchPath => {\n      moviesAPI\n        .getMovieDetails(searchPath)\n        .then(results => {\n          setMovieData(results);\n        })\n        .catch(err => toast.error(err))\n        .finally(setIsLoading(false));\n    };\n    if (searchPath) {\n      setIsLoading(true);\n      getMovieData(searchPath);\n    }\n  }, [searchPath]);\n\n  return (\n    <>\n      <SCLink to={state || `/${ROUTE_HOME_PAGE}`}>\n        <FaArrowLeft size=\"24\" />\n        Go back\n      </SCLink>\n      {isLoading && <Loader />}\n      {!movieData?.length && (\n        <>\n          <Box as=\"article\" display=\"flex\" gridGap=\"15px\" mt={5} mb={5}>\n            <SCImageWrapper>\n              {poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n                  alt={title}\n                />\n              ) : (\n                <img src={placeholderIMG} alt={title} />\n              )}\n            </SCImageWrapper>\n            <Box>\n              <SCTitle>{title}</SCTitle>\n              <SCText>\n                User Score: {vote_average ? vote_average.toFixed(1) : '-'}\n              </SCText>\n              <SCSubTitle>Overview</SCSubTitle>\n              <SCText>{overview || '-'}</SCText>\n              <SCSubTitle>Genres</SCSubTitle>\n              <SCText>\n                {genres?.map(genre => genre.name).join(', ') || '-'}\n              </SCText>\n            </Box>\n          </Box>\n\n          <SCNavBar>\n            Additional information\n            <Box as=\"ul\" display=\"flex\" gridGap=\"15px\">\n              <Box as=\"li\">\n                <SCNavLink state={state} to=\"cast\">\n                  Cast\n                </SCNavLink>\n              </Box>\n              <Box as=\"li\">\n                <SCNavLink state={state} to=\"reviews\">\n                  Reviews\n                </SCNavLink>\n              </Box>\n            </Box>\n          </SCNavBar>\n\n          <Box>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\nimport { Component } from 'react';\n\nclass MoviesApiService extends Component {\n  _URL_ORIGIN = 'https://api.themoviedb.org/3';\n  _apiKey = '739ddb8e241607cc9ff00a57b23f5e54';\n\n    getTrendingMovies = async () => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n      const pathName = '/trending/movie/day'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n  getMoviesBySearchQuery= async (query, page) => {\n    const searchParam = new URLSearchParams({\n      query,\n      page,\n      api_key: this._apiKey,\n    });\n    const pathName = '/search/movie'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n    getMovieDetails= async (searchPath) => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n\n    const pathName = '/movie/'\n    \n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}/${searchPath}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            \"Unfortunately, we don't have more details about this movie...\"\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n};\n\nconst moviesAPI = new MoviesApiService();\n\nexport default moviesAPI;\n"],"names":["SCLink","styled","Link","p","theme","borders","normal","radii","lg","colors","white","primary","SCTitle","space","SCSubTitle","fontWeights","bold","SCText","SCImageWrapper","md","SCNavBar","SCNavLink","NavLink","text","accent","useLocation","pathname","state","useState","movieData","setMovieData","isLoading","setIsLoading","poster_path","title","vote_average","overview","genres","searchPath","includes","slice","useEffect","moviesAPI","then","results","catch","err","toast","finally","getMovieData","to","process","size","Loader","length","Box","as","display","gridGap","mt","mb","src","alt","placeholderIMG","toFixed","map","genre","name","join","Suspense","fallback","MoviesApiService","_URL_ORIGIN","_apiKey","getTrendingMovies","searchParam","URLSearchParams","api_key","axios","response","status","Promise","reject","message","data","total_results","getMoviesBySearchQuery","query","page","getMovieDetails","Component"],"sourceRoot":""}