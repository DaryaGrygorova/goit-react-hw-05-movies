{"version":3,"file":"static/js/531.7c7f0b1c.chunk.js","mappings":"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","sources":["components/TrendingMoviesList/TrendingMoviesList.styled.js","components/TrendingMoviesList/TrendingMoviesList.jsx","Pages/Home/Home.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SCTitle = styled.h1`\nmargin-bottom: 15px;\n`;\n\nexport const SCNavLink = styled(NavLink)`\nposition: relative;\n  display: inline-flex;\n  align-items: flex-end;\n  gap: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: ${p=>p.theme.space[3]}px 0;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n    \n   ::after {\n    transform: scale(1);\n  }\n  }\n\n  ::after {\n    content: '';\n    position: absolute;\n    bottom: ${p=>p.theme.space[3]}px;\n    left: 32px;\n    display: block;\n    background-color: ${p => p.theme.colors.accent};\n    height: 2px;\n    width: calc(100% - 32px);\n    transform: scale(0);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import MovieItem from 'components/MovieItem';\nimport { useState, useEffect } from 'react';\n\nimport moviesAPI from '../../service-api/MoviesAPI';\nimport { Box } from '../Box';\n\nimport { SCTitle } from './TrendingMoviesList.styled';\n\nconst TrendingMoviesList = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    moviesAPI.getTrendingMovies().then(({ results }) => {\n      setTrendingMovies(results);\n    });\n  }, []);\n\n  return (\n    <Box>\n      <SCTitle>Trending today (Top-20)</SCTitle>\n      {!!trendingMovies?.length && (\n        <ul>\n          {trendingMovies.map(movie => (\n            <Box as=\"li\" key={movie.id}>\n              <MovieItem movie={movie} />\n            </Box>\n          ))}\n        </ul>\n      )}\n    </Box>\n  );\n};\n\nexport default TrendingMoviesList;\n","import { Box } from 'components/Box';\nimport TrendingMoviesList from '../../components/TrendingMoviesList';\n\nconst Home = () => {\n  return (\n    <Box as=\"main\" variant=\"container\" pt={4}>\n      <TrendingMoviesList />\n    </Box>\n  );\n};\n\nexport default Home;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SCTitle = styled.h1`\nmargin-bottom: 15px;\n`;\n\nexport const SCNavLink = styled(NavLink)`\nposition: relative;\n  display: inline-flex;\n  align-items: flex-end;\n  gap: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: ${p=>p.theme.space[3]}px 0;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n    \n   ::after {\n    transform: scale(1);\n  }\n  }\n\n  ::after {\n    content: '';\n    position: absolute;\n    bottom: ${p=>p.theme.space[3]}px;\n    left: 32px;\n    display: block;\n    background-color: ${p => p.theme.colors.accent};\n    height: 2px;\n    width: calc(100% - 32px);\n    transform: scale(0);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { SCNavLink } from './MovieItem.styled';\nimport { GiFilmSpool } from 'react-icons/gi';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieItem = ({ movie }) => {\n  const ROUTE_HOME_PAGE = process.env.REACT_APP_ROUTE_HOME_PAGE;\n  const { id, title } = movie;\n  const location = useLocation();\n\n  return (\n    <SCNavLink\n      to={`/${ROUTE_HOME_PAGE}/movies/${id}`}\n      key={id}\n      state={location}\n    >\n      <GiFilmSpool size=\"24\" />\n      {title || 'No name film'}\n    </SCNavLink>\n  );\n};\n\nexport default MovieItem;\n","import axios from 'axios';\nimport { Component } from 'react';\n\nclass MoviesApiService extends Component {\n  _URL_ORIGIN = 'https://api.themoviedb.org/3';\n  _apiKey = '739ddb8e241607cc9ff00a57b23f5e54';\n\n    getTrendingMovies = async () => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n      const pathName = '/trending/movie/day'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n  getMoviesBySearchQuery= async (query, page) => {\n    const searchParam = new URLSearchParams({\n      query,\n      page,\n      api_key: this._apiKey,\n    });\n    const pathName = '/search/movie'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n    getMovieDetails= async (searchPath) => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n\n    const pathName = '/movie/'\n    \n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}/${searchPath}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            \"Unfortunately, we don't have more details about this movie...\"\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n};\n\nconst moviesAPI = new MoviesApiService();\n\nexport default moviesAPI;\n"],"names":["SCTitle","styled","NavLink","p","theme","space","colors","text","fontWeights","bold","accent","useState","trendingMovies","setTrendingMovies","useEffect","moviesAPI","then","results","Box","length","map","movie","as","MovieItem","id","variant","pt","SCNavLink","title","location","useLocation","to","process","state","size","MoviesApiService","_URL_ORIGIN","_apiKey","getTrendingMovies","searchParam","URLSearchParams","api_key","axios","response","status","Promise","reject","message","data","total_results","catch","err","getMoviesBySearchQuery","query","page","getMovieDetails","searchPath","Component"],"sourceRoot":""}