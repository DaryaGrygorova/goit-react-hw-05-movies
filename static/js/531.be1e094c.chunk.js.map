{"version":3,"file":"static/js/531.be1e094c.chunk.js","mappings":"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","sources":["components/TrendingMoviesList/TrendingMoviesList.styled.js","components/TrendingMoviesList/TrendingMoviesList.jsx","Pages/Home/Home.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SCTitle = styled.h1`\nmargin-bottom: 15px;\n`;\n\nexport const SCNavLink = styled(NavLink)`\nposition: relative;\n  display: inline-flex;\n  align-items: flex-end;\n  gap: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: ${p=>p.theme.space[3]}px 0;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n    \n   ::after {\n    transform: scale(1);\n  }\n  }\n\n  ::after {\n    content: '';\n    position: absolute;\n    bottom: ${p=>p.theme.space[3]}px;\n    left: 32px;\n    display: block;\n    background-color: ${p => p.theme.colors.accent};\n    height: 2px;\n    width: calc(100% - 32px);\n    transform: scale(0);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport Loader from 'components/Loader';\nimport MovieItem from 'components/MovieItem';\nimport { getTrendingMovies } from '../../service-api/MoviesAPI';\nimport { Box } from 'components/Box';\n\nimport { SCTitle } from './TrendingMoviesList.styled';\n\nconst TrendingMoviesList = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTrendingMovies()\n      .then(({ results }) => {\n        setTrendingMovies(results);\n      })\n      .catch(err => toast.error(err))\n      .finally(setIsLoading(false));\n  }, []);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <Box>\n      <SCTitle>Trending today (Top-20)</SCTitle>\n      {!!trendingMovies?.length && (\n        <ul>\n          {trendingMovies.map(movie => (\n            <Box as=\"li\" key={movie.id}>\n              <MovieItem movie={movie} />\n            </Box>\n          ))}\n        </ul>\n      )}\n    </Box>\n  );\n};\n\nexport default TrendingMoviesList;\n","import { Box } from 'components/Box';\nimport TrendingMoviesList from '../../components/TrendingMoviesList';\n\nconst Home = () => {\n  return (\n    <Box as=\"main\" variant=\"container\" pt={4}>\n      <TrendingMoviesList />\n    </Box>\n  );\n};\n\nexport default Home;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SCTitle = styled.h1`\nmargin-bottom: 15px;\n`;\n\nexport const SCNavLink = styled(NavLink)`\nposition: relative;\n  display: inline-flex;\n  align-items: flex-end;\n  gap: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: ${p=>p.theme.space[3]}px 0;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n    \n   ::after {\n    transform: scale(1);\n  }\n  }\n\n  ::after {\n    content: '';\n    position: absolute;\n    bottom: ${p=>p.theme.space[3]}px;\n    left: 32px;\n    display: block;\n    background-color: ${p => p.theme.colors.accent};\n    height: 2px;\n    width: calc(100% - 32px);\n    transform: scale(0);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { GiFilmSpool } from 'react-icons/gi';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { SCNavLink } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const ROUTE_HOME_PAGE = process.env.REACT_APP_ROUTE_HOME_PAGE;\n  const { id, title } = movie;\n  const location = useLocation();\n\n  return (\n    <SCNavLink\n      to={`/${ROUTE_HOME_PAGE}/movies/${id}`}\n      key={id}\n      state={location}\n    >\n      <GiFilmSpool size=\"24\" />\n      {title || 'No name film'}\n    </SCNavLink>\n  );\n};\nMovieItem.propTypes = {\n  movie: {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }.isRequired,\n};\nexport default MovieItem;\n","import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nconst getMovies = async ({ pathName, param={} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n  api_key: '739ddb8e241607cc9ff00a57b23f5e54',\n  ...param\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject(\n          'Sorry, no matches found. Please try again.'\n        );\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' })\n};\n\n     \nexport const getMoviesBySearchQuery = (query) => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: {query}\n  })\n};\n  \nexport const getMovieDetailsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}`\n  })\n};\nexport const getMovieCastById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`\n  })\n};\n\nexport const getMovieReviewsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`\n  })\n};"],"names":["SCTitle","styled","NavLink","p","theme","space","colors","text","fontWeights","bold","accent","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","then","results","catch","err","toast","finally","Loader","Box","length","map","movie","as","MovieItem","id","variant","pt","SCNavLink","title","location","useLocation","to","process","state","size","IMAGE_URL","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","response","status","Promise","reject","message","data","total_results","getMoviesBySearchQuery","query","getMovieDetailsById","movieId","getMovieCastById","getMovieReviewsById"],"sourceRoot":""}