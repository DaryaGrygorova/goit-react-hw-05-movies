{"version":3,"file":"static/js/696.773152b5.chunk.js","mappings":"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","sources":["components/MovieCast/MovieCast.styled.js","components/MovieCast/MovieCast.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SCTitle = styled.h2`\nmargin-bottom: ${p => p.theme.space[3]}px;\n`;\nexport const SCSubTitle = styled.p`\nfont-weight: ${p => p.theme.fontWeights.bold};\nmargin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const SCText = styled.p`\ncolor: ${p => p.theme.colors.text};\nfont-style: italic;\n`;\nexport const SCCastList = styled.ul`\n box-shadow: inset 0px 8px 10px -8px rgb(77,75,77);\n\n li:first-child {\n  padding-top: ${p => p.theme.space[4]}px;\n }\n`;\n\nexport const SCImageWrapper = styled.div`\nflex-shrink: 0;\nwidth: 100px;\nheight: auto;\nborder-radius: ${p => p.theme.radii.md};\noverflow: hidden;\n`;\n\n\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport moviesAPI from 'service-api/MoviesAPI';\nimport { Box } from 'components/Box';\nimport Loader from '../Loader';\nimport placeholderIMG from '../../images/placeholder.webp';\n\nimport {\n  SCImageWrapper,\n  SCTitle,\n  SCSubTitle,\n  SCText,\n  SCCastList,\n} from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const { pathname } = useLocation();\n  const [movieCast, setMovieCast] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getSearchPath = () => {\n    if (pathname.includes('cast')) {\n      return pathname?.slice(32, -4) + 'credits';\n    }\n    return pathname?.slice(32);\n  };\n\n  const searchPath = getSearchPath();\n\n  useEffect(() => {\n    const getMovieCast = searchPath => {\n      moviesAPI\n        .getMovieDetails(searchPath)\n        .then(results => {\n          setMovieCast(results);\n        })\n        .catch(err => console.log(err))\n        .finally(setIsLoading(false));\n    };\n    if (searchPath) {\n      setIsLoading(true);\n      getMovieCast(searchPath);\n    }\n  }, [searchPath]);\n\n  return (\n    <SCCastList>\n      {isLoading && <Loader />}\n      {!!movieCast?.cast?.length &&\n        movieCast?.cast.map(\n          ({\n            cast_id,\n            profile_path,\n            name,\n            known_for_department,\n            character,\n          }) => (\n            <Box\n              key={cast_id}\n              display=\"flex\"\n              gridGap=\"15px\"\n              as=\"li\"\n              alignItems=\"center\"\n              mb={5}\n            >\n              <SCImageWrapper>\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={name}\n                  />\n                ) : (\n                  <img src={placeholderIMG} alt={name} />\n                )}\n              </SCImageWrapper>\n              <Box>\n                <SCTitle>{name || '-'}</SCTitle>\n                <SCSubTitle>Character: {character || '-'}</SCSubTitle>\n                <SCText>{known_for_department || '-'}</SCText>\n              </Box>\n            </Box>\n          )\n        )}\n    </SCCastList>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\nimport { Component } from 'react';\n\nclass MoviesApiService extends Component {\n  _URL_ORIGIN = 'https://api.themoviedb.org/3';\n  _apiKey = '739ddb8e241607cc9ff00a57b23f5e54';\n\n    getTrendingMovies = async () => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n      const pathName = '/trending/movie/day'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n  getMoviesBySearchQuery= async (query, page) => {\n    const searchParam = new URLSearchParams({\n      query,\n      page,\n      api_key: this._apiKey,\n    });\n    const pathName = '/search/movie'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n    getMovieDetails= async (searchPath) => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n\n    const pathName = '/movie/'\n    \n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}/${searchPath}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            \"Unfortunately, we don't have more details about this movie...\"\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n};\n\nconst moviesAPI = new MoviesApiService();\n\nexport default moviesAPI;\n"],"names":["SCTitle","styled","p","theme","space","SCSubTitle","fontWeights","bold","SCText","colors","text","SCCastList","SCImageWrapper","radii","md","pathname","useLocation","useState","movieCast","setMovieCast","isLoading","setIsLoading","searchPath","includes","slice","useEffect","moviesAPI","then","results","catch","err","console","log","finally","getMovieCast","Loader","cast","length","map","cast_id","profile_path","name","known_for_department","character","Box","display","gridGap","as","alignItems","mb","src","alt","placeholderIMG","MoviesApiService","_URL_ORIGIN","_apiKey","getTrendingMovies","searchParam","URLSearchParams","api_key","axios","response","status","Promise","reject","message","data","total_results","getMoviesBySearchQuery","query","page","getMovieDetails","Component"],"sourceRoot":""}