{"version":3,"file":"static/js/715.c885d152.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesSearch/SearchForm/SearchForm.styled.js","components/MoviesSearch/SearchForm/SearchForm.jsx","components/MoviesSearch/MoviesSearch.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SCTitle = styled.h1`\nmargin-bottom: 15px;\n`;\n\nexport const SCNavLink = styled(NavLink)`\nposition: relative;\n  display: inline-flex;\n  align-items: flex-end;\n  gap: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: ${p=>p.theme.space[3]}px 0;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n    \n   ::after {\n    transform: scale(1);\n  }\n  }\n\n  ::after {\n    content: '';\n    position: absolute;\n    bottom: ${p=>p.theme.space[3]}px;\n    left: 32px;\n    display: block;\n    background-color: ${p => p.theme.colors.accent};\n    height: 2px;\n    width: calc(100% - 32px);\n    transform: scale(0);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { SCNavLink } from './MovieItem.styled';\nimport { GiFilmSpool } from 'react-icons/gi';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieItem = ({ movie }) => {\n  const ROUTE_HOME_PAGE = process.env.REACT_APP_ROUTE_HOME_PAGE;\n  const { id, title } = movie;\n  const location = useLocation();\n\n  return (\n    <SCNavLink\n      to={`/${ROUTE_HOME_PAGE}/movies/${id}`}\n      key={id}\n      state={location}\n    >\n      <GiFilmSpool size=\"24\" />\n      {title || 'No name film'}\n    </SCNavLink>\n  );\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: ${p=>p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.lg};\n  border-color: ${p => p.theme.colors.primary};\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  height: 100%;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 4px;\n\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: ${p => p.theme.colors.primary};\n  color: ${p => p.theme.colors.white};\n\n  :hover,\n  :focus {\n  opacity: 1;\n  }\n`;","import { toast } from 'react-toastify';\n\nimport { BsSearch } from 'react-icons/bs';\n\nimport { StyledForm, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ value, onChange, onFormSubmit }) => {\n  const onSubmitHandle = e => {\n    e.preventDefault();\n\n    const query = e.target.elements.searchQuery.value;\n\n    if (query.trim() === '') {\n      toast.warning('Enter search query!');\n    }\n\n    onFormSubmit(query);\n  };\n\n  return (\n    <StyledForm autoComplete=\"off\" onSubmit={onSubmitHandle}>\n      <Button type=\"submit\">\n        <BsSearch aria-label=\"Search\" />\n      </Button>\n\n      <Input\n        id=\"searchQuery\"\n        type=\"text\"\n        name=\"searchQuery\"\n        value={value}\n        placeholder=\"Search movie\"\n        onChange={e => onChange(e.target.value)}\n        autoFocus\n      />\n    </StyledForm>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { Box } from '../Box';\nimport SearchForm from '../MoviesSearch/SearchForm';\nimport MovieItem from '../MovieItem';\nimport Loader from '../Loader';\n\nimport moviesAPI from 'service-api/MoviesAPI';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const [searchQuery, setSearchQuery] = useState(query);\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPage(1);\n    setMovies([]);\n  }, [searchQuery, setSearchParams]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const data = await moviesAPI.getMoviesBySearchQuery(searchQuery, page);\n        setMovies([...data.results]);\n      } catch (err) {\n        toast.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (searchQuery.trim() !== '') {\n      setIsLoading(true);\n      getMovies();\n    }\n  }, [page, searchQuery]);\n\n  const onChangeQuery = query => {\n    setSearchParams({ query });\n  };\n\n  const onFormSubmit = query => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <Box>\n      <SearchForm\n        value={query}\n        onChange={onChangeQuery}\n        onFormSubmit={onFormSubmit}\n      />\n      {isLoading && <Loader />}\n      {!!movies?.length && !isLoading && (\n        <Box as=\"ul\" pt={4}>\n          {movies.map(movie => (\n            <Box key={movie.id}>\n              <MovieItem movie={movie} />\n            </Box>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default MoviesSearch;\n","import axios from 'axios';\nimport { Component } from 'react';\n\nclass MoviesApiService extends Component {\n  _URL_ORIGIN = 'https://api.themoviedb.org/3';\n  _apiKey = '739ddb8e241607cc9ff00a57b23f5e54';\n\n    getTrendingMovies = async () => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n      const pathName = '/trending/movie/day'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n  getMoviesBySearchQuery= async (query, page) => {\n    const searchParam = new URLSearchParams({\n      query,\n      page,\n      api_key: this._apiKey,\n    });\n    const pathName = '/search/movie'\n\n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            'Sorry, no matches found. Please try again.'\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n\n    getMovieDetails= async (searchPath) => {\n    const searchParam = new URLSearchParams({\n      api_key: this._apiKey,\n    });\n\n    const pathName = '/movie/'\n    \n     return axios\n      .get(`${this._URL_ORIGIN}${pathName}/${searchPath}?${searchParam}`)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject(`Error: ${response.message}`);\n        }\n\n        if (response.data.total_results === 0) {\n          return Promise.reject(\n            \"Unfortunately, we don't have more details about this movie...\"\n          );\n        }\n        return response.data;\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      });\n  };\n};\n\nconst moviesAPI = new MoviesApiService();\n\nexport default moviesAPI;\n"],"names":["SCNavLink","styled","NavLink","p","theme","space","colors","text","fontWeights","bold","accent","movie","id","title","location","useLocation","to","process","state","size","StyledForm","borders","normal","radii","lg","primary","Input","Button","white","value","onChange","onFormSubmit","autoComplete","onSubmit","e","preventDefault","query","target","elements","searchQuery","trim","toast","type","name","placeholder","autoFocus","useSearchParams","searchParams","setSearchParams","get","useState","setSearchQuery","movies","setMovies","page","setPage","isLoading","setIsLoading","useEffect","getMovies","moviesAPI","data","results","Box","Loader","length","as","pt","map","MovieItem","MoviesApiService","_URL_ORIGIN","_apiKey","getTrendingMovies","searchParam","URLSearchParams","api_key","axios","then","response","status","Promise","reject","message","total_results","catch","err","getMoviesBySearchQuery","getMovieDetails","searchPath","Component"],"sourceRoot":""}