{"version":3,"file":"static/js/715.ff316090.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesSearch/SearchForm/SearchForm.styled.js","components/MoviesSearch/SearchForm/SearchForm.jsx","components/MoviesSearch/MoviesSearch.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SCTitle = styled.h1`\nmargin-bottom: 15px;\n`;\n\nexport const SCNavLink = styled(NavLink)`\nposition: relative;\n  display: inline-flex;\n  align-items: flex-end;\n  gap: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: ${p=>p.theme.space[3]}px 0;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n    \n   ::after {\n    transform: scale(1);\n  }\n  }\n\n  ::after {\n    content: '';\n    position: absolute;\n    bottom: ${p=>p.theme.space[3]}px;\n    left: 32px;\n    display: block;\n    background-color: ${p => p.theme.colors.accent};\n    height: 2px;\n    width: calc(100% - 32px);\n    transform: scale(0);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { GiFilmSpool } from 'react-icons/gi';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { SCNavLink } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const ROUTE_HOME_PAGE = process.env.REACT_APP_ROUTE_HOME_PAGE;\n  const { id, title } = movie;\n  const location = useLocation();\n\n  return (\n    <SCNavLink\n      to={`/${ROUTE_HOME_PAGE}/movies/${id}`}\n      key={id}\n      state={location}\n    >\n      <GiFilmSpool size=\"24\" />\n      {title || 'No name film'}\n    </SCNavLink>\n  );\n};\nMovieItem.propTypes = {\n  movie: {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }.isRequired,\n};\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: ${p=>p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.lg};\n  border-color: ${p => p.theme.colors.primary};\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  height: 100%;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 4px;\n\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: ${p => p.theme.colors.primary};\n  color: ${p => p.theme.colors.white};\n\n  :hover,\n  :focus {\n  opacity: 1;\n  }\n`;","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { StyledForm, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ value, onChange, onFormSubmit }) => {\n  const onSubmitHandle = e => {\n    e.preventDefault();\n\n    const query = e.target.elements.searchQuery.value;\n\n    if (query.trim() === '') {\n      toast.warning('Enter search query!');\n    }\n\n    onFormSubmit(query);\n  };\n\n  return (\n    <StyledForm autoComplete=\"off\" onSubmit={onSubmitHandle}>\n      <Button type=\"submit\">\n        <BsSearch aria-label=\"Search\" />\n      </Button>\n\n      <Input\n        id=\"searchQuery\"\n        type=\"text\"\n        name=\"searchQuery\"\n        value={value}\n        placeholder=\"Search movie\"\n        onChange={e => onChange(e.target.value)}\n        autoFocus\n      />\n    </StyledForm>\n  );\n};\nSearchForm.protoTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n}.isRequired;\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { Box } from '../Box';\nimport SearchForm from '../MoviesSearch/SearchForm';\nimport MovieItem from '../MovieItem';\nimport Loader from '../Loader';\n\nimport { getMoviesBySearchQuery } from 'service-api/MoviesAPI';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const [searchQuery, setSearchQuery] = useState(query);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setMovies([]);\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (searchQuery.trim() !== '') {\n      setIsLoading(true);\n\n      getMoviesBySearchQuery(searchQuery)\n        .then(({ data }) => {\n          setMovies([...data.results]);\n        })\n        .catch(err => toast.error(err))\n        .finally(setIsLoading(false));\n    }\n  }, [searchQuery]);\n\n  const onChangeQuery = query => {\n    setSearchParams({ query });\n  };\n\n  const onFormSubmit = query => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <Box>\n      <SearchForm\n        value={query}\n        onChange={onChangeQuery}\n        onFormSubmit={onFormSubmit}\n      />\n      {isLoading && <Loader />}\n      {!!movies?.length && !isLoading && (\n        <Box as=\"ul\" pt={4}>\n          {movies.map(movie => (\n            <Box key={movie.id}>\n              <MovieItem movie={movie} />\n            </Box>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default MoviesSearch;\n","import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nconst getMovies = async ({ pathName, param={} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n  api_key: '739ddb8e241607cc9ff00a57b23f5e54',\n  ...param\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject(\n          'Sorry, no matches found. Please try again.'\n        );\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' })\n};\n\n     \nexport const getMoviesBySearchQuery = (query) => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: {query}\n  })\n};\n  \nexport const getMovieDetailsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}`\n  })\n};\nexport const getMovieCastById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`\n  })\n};\n\nexport const getMovieReviewsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`\n  })\n};"],"names":["SCNavLink","styled","NavLink","p","theme","space","colors","text","fontWeights","bold","accent","movie","id","title","location","useLocation","to","process","state","size","StyledForm","borders","normal","radii","lg","primary","Input","Button","white","SearchForm","value","onChange","onFormSubmit","autoComplete","onSubmit","e","preventDefault","query","target","elements","searchQuery","trim","toast","type","name","placeholder","autoFocus","protoTypes","PropTypes","isRequired","useSearchParams","searchParams","setSearchParams","get","useState","setSearchQuery","movies","setMovies","isLoading","setIsLoading","useEffect","getMoviesBySearchQuery","then","data","results","catch","err","finally","Box","Loader","length","as","pt","map","MovieItem","IMAGE_URL","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","response","status","Promise","reject","message","total_results","getTrendingMovies","getMovieDetailsById","movieId","getMovieCastById","getMovieReviewsById"],"sourceRoot":""}