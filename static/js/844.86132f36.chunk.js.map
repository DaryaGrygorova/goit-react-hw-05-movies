{"version":3,"file":"static/js/844.86132f36.chunk.js","mappings":"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","sources":["components/MoviesDetails/MovieCast/MovieCast.styled.js","components/MoviesDetails/MovieCast/MovieCast.jsx","service-api/MoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SCTitle = styled.p`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.l};\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const SCSubTitle = styled.p`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const SCText = styled.p`\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.text};\n  font-style: italic;\n`;\nexport const SCCastList = styled.ul`\n  box-shadow: inset 0px 8px 10px -8px rgb(77, 75, 77);\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  padding-top: ${p => p.theme.space[4]}px;\n\n  li {\n    width: calc((100% - 30px) / 3);\n    display: flex;\n    gap: 15px;\n    align-items: center;\n  /* box-shadow: 0 -2px 5px 1px #4d4b4d; */\n  outline: 0.5px solid rgba(77, 75, 77, 0.2);\n  border-radius: 8px;\n  }\n`;\n\nexport const SCImageWrapper = styled.div`\n  flex-shrink: 0;\n  width: 30%;\n  height: auto;\n  border-radius: ${p => p.theme.radii.md};\n  overflow: hidden;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getMovieCastById, IMAGE_URL } from 'service-api/MoviesAPI';\nimport { Box } from 'components/Box';\nimport Loader from '../../Loader';\nimport placeholderIMG from '../../../images/unknown_person.png';\n\nimport {\n  SCImageWrapper,\n  SCTitle,\n  SCSubTitle,\n  SCText,\n  SCCastList,\n} from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    movieId && setIsLoading(true);\n\n    getMovieCastById(movieId)\n      .then(results => {\n        setMovieCast(results);\n      })\n      .catch(err => console.log(err))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <SCCastList>\n      {isLoading && <Loader />}\n      {!!movieCast?.cast?.length &&\n        movieCast?.cast.map(\n          ({\n            cast_id,\n            profile_path,\n            name,\n            known_for_department,\n            character,\n          }) => (\n            <Box key={cast_id} as=\"li\">\n              <SCImageWrapper>\n                {profile_path ? (\n                  <img src={`${IMAGE_URL}w500${profile_path}`} alt={name} />\n                ) : (\n                  <img src={placeholderIMG} alt={name} />\n                )}\n              </SCImageWrapper>\n              <Box>\n                <SCTitle>{name || '-'}</SCTitle>\n                <SCSubTitle>Character: {character || '-'}</SCSubTitle>\n                <SCText>{known_for_department || '-'}</SCText>\n              </Box>\n            </Box>\n          )\n        )}\n    </SCCastList>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nconst getMovies = async ({ pathName, param={} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n  api_key: '739ddb8e241607cc9ff00a57b23f5e54',\n  ...param\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject(\n          'Sorry, no matches found. Please try again.'\n        );\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' })\n};\n\n     \nexport const getMoviesBySearchQuery = (query) => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: {query}\n  })\n};\n  \nexport const getMovieDetailsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}`\n  })\n};\nexport const getMovieCastById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`\n  })\n};\n\nexport const getMovieReviewsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`\n  })\n};"],"names":["SCTitle","styled","p","theme","fontWeights","bold","fontSizes","l","space","SCSubTitle","m","SCText","s","colors","text","SCCastList","SCImageWrapper","radii","md","movieId","useParams","useState","movieCast","setMovieCast","isLoading","setIsLoading","useEffect","getMovieCastById","then","results","catch","err","console","log","finally","Loader","cast","length","map","cast_id","profile_path","name","known_for_department","character","Box","as","src","IMAGE_URL","alt","placeholderIMG","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","response","status","Promise","reject","message","data","total_results","getTrendingMovies","getMoviesBySearchQuery","query","getMovieDetailsById","getMovieReviewsById"],"sourceRoot":""}